{:paths ["src" "resources"]
 :deps  {org.clojure/clojure  {:mvn/version "1.12.0-alpha5"}
         thheller/shadow-cljs {:mvn/version "2.16.12"}
         com.google.javascript/closure-compiler-unshaded {:mvn/version "v20211006"}
           ;; common libs
         net.cgrand/xforms                               {:mvn/version "0.19.2"}
         funcool/promesa                                 {:git/url "https://github.com/funcool/promesa"
                                                          :sha     "147c15974484a4f3634e6ad095217806dbb58ee4"}

         org.clojure/core.match {:mvn/version "1.0.1"}
         org.clojure/spec.alpha {:mvn/version "0.3.214"}
        ;; db shite
         com.github.seancorfield/next.jdbc {:mvn/version "1.2.796"}
         org.xerial/sqlite-jdbc            {:mvn/version "3.39.2.1"}
         ;; logging?
         ch.qos.logback/logback-classic {:mvn/version "1.4.1"}
         io.pedestal/pedestal.log {:mvn/version "0.5.10"}
         org.slf4j/slf4j-api {:mvn/version "2.0.3"}
         ;; datascript!
         datascript/datascript {:git/url "https://github.com/tonsky/datascript"
                                :sha     "e8ba04fe790ef162bc3ed953cd033530c5075c40"}
         }
 :aliases {:cljs   {:extra-deps {org.clojure/clojurescript {:mvn/version "1.11.60"}
                                 cider/cider-nrepl         {:mvn/version "0.26.0"}
                                 ;; frontend routing
                                 metosin/reitit-frontend {:mvn/version "0.5.18"}
                                 ;; custom chrome formatter. preloaded w/ shadow
                                 binaryage/devtools      {:mvn/version "1.0.6"}

                                 ;; push state? routing?
                                 kibu/pushy              {:mvn/version "0.3.8"}

                                  ;; libs
                                 cljs-http/cljs-http {:mvn/version "0.1.46"}
                                 re-frame/re-frame   {:mvn/version "1.3.0-rc2"}
                                 reagent/reagent     {:git/url "https://github.com/reagent-project/reagent"
                                                      :sha     "b71fc361b85338ef4e4cd52a7b21e0f3f3f89628"}
                                 }
                    :main-opts ["-m" "nrepl.cmdline"
                                "--middleware"
                                 "[shadow.cljs.devtools.server.nrepl/middleware,cider.nrepl/cider-middleware]"
                                 "--interactive" "--color"]
                    ;; cant just call -m nrepl.cmdline bc it doesn't start the shadow server!
                    :exec-fn   kev.dev/dev-repl
                    :exec-args {:cider-args
                                ["--middleware"
                                 "[shadow.cljs.devtools.server.nrepl/middleware,cider.nrepl/cider-middleware,portal.nrepl/wrap-repl]"
                                 "--interactive" "--color"]}
                    }}

 }
